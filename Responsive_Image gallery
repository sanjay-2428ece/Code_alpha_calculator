<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Image Gallery with Hover Effects</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 20px;
      background-color: #f4f4f4;
      text-align: center;
    }

    h1 {
      color: #333;
    }

    /* Filter Buttons */
    #filter-buttons {
      margin-bottom: 20px;
    }

    .filter-btn {
      background-color: #fff;
      border: 1px solid #ddd;
      border-radius: 5px;
      padding: 10px 20px;
      cursor: pointer;
      margin: 0 5px;
      transition: background-color 0.3s, color 0.3s;
    }

    .filter-btn:hover,
    .filter-btn.active {
      background-color: #007BFF;
      color: #fff;
      border-color: #007BFF;
    }

    /* Image Gallery */
    #image-gallery {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 15px;
      padding: 0 10px;
    }

    .image-item {
      position: relative;
      overflow: hidden;
      cursor: pointer;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    /* Base image: grayscale with smooth transition */
    .image-item img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      display: block;
      filter: grayscale(100%) brightness(80%);
      transition: all 0.4s ease;
    }

    /* On hover â†’ color + zoom */
    .image-item:hover img {
      filter: grayscale(0%) brightness(100%);
      transform: scale(1.1);
    }

    /* Overlay caption effect */
    .image-item::after {
      content: attr(data-category);
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      background: rgba(0, 0, 0, 0.6);
      color: #fff;
      padding: 10px;
      text-align: center;
      opacity: 0;
      transform: translateY(100%);
      transition: all 0.4s ease;
    }

    .image-item:hover::after {
      opacity: 1;
      transform: translateY(0);
    }

    /* Lightbox */
    .lightbox {
      display: none;
      position: fixed;
      z-index: 1000;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.9);
      align-items: center;
      justify-content: center;
    }

    .lightbox-content {
      position: relative;
      margin: auto;
      padding: 20px;
      width: 90%;
      max-width: 800px;
      animation: fadeIn 0.5s;
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: scale(0.95);
      }
      to {
        opacity: 1;
        transform: scale(1);
      }
    }

    .lightbox-img {
      width: 100%;
      height: auto;
      border-radius: 5px;
    }

    .caption {
      color: #ccc;
      text-align: center;
      padding: 15px 0;
      font-size: 16px;
    }

    .close-btn {
      position: absolute;
      top: 15px;
      right: 35px;
      color: #fff;
      font-size: 40px;
      font-weight: bold;
      cursor: pointer;
      transition: 0.3s;
    }

    .close-btn:hover {
      color: #bbb;
    }

    .prev-btn,
    .next-btn {
      cursor: pointer;
      position: absolute;
      top: 50%;
      padding: 16px;
      margin-top: -30px;
      color: white;
      font-weight: bold;
      font-size: 24px;
      transition: 0.6s ease;
      border-radius: 3px;
      user-select: none;
    }

    .next-btn {
      right: 0;
      border-radius: 3px 0 0 3px;
    }

    .prev-btn {
      left: 0;
      border-radius: 0 3px 3px 0;
    }

    .prev-btn:hover,
    .next-btn:hover {
      background-color: rgba(255, 255, 255, 0.2);
    }

    .image-item.hide {
      display: none;
    }

    @media (max-width: 768px) {
      #image-gallery {
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
      }
    }

    @media (max-width: 480px) {
      #image-gallery {
        grid-template-columns: 1fr;
      }

      .filter-btn {
        display: block;
        width: 80%;
        margin: 5px auto;
      }

      .prev-btn,
      .next-btn {
        font-size: 18px;
        padding: 10px;
      }
    }
  </style>
</head>
<body>
  <h1>Image Gallery</h1>

  <!-- Filter Buttons -->
  <div id="filter-buttons">
    <button class="filter-btn active" data-filter="all">All</button>
    <button class="filter-btn" data-filter="matlab">Matlab</button>
    <button class="filter-btn" data-filter="normal camera">Normal Camera</button>
    <button class="filter-btn" data-filter="nature tourism">Nature</button>
    <button class="filter-btn" data-filter="board ckt">Board</button>
    <button class="filter-btn" data-filter="teachers day celebration">Teachers Day</button>
  </div>

  <!-- Image Gallery -->
  <div id="image-gallery">
    <div class="image-item" data-category="matlab">
      <img src="./img.png" alt="matlab waveforms">
    </div>
    <div class="image-item" data-category="matlab">
      <img src="./img_2.png" alt="matlab waveforms2">
    </div>
    <div class="image-item" data-category="normal camera">
      <img src="self.jpg" alt="self">
    </div>
    <div class="image-item" data-category="nature tourism">
      <img src="darjeeling.jpg" alt="darjeeling">
    </div>
    <div class="image-item" data-category="normal camera">
      <img src="holi.jpg" alt="holi">
    </div>
    <div class="image-item" data-category="board ckt">
      <img src="board.jpg" alt="board">
    </div>
    <div class="image-item" data-category="teachers day celebration">
      <img src="guruji.jpg" alt="myguruji">
    </div>
  </div>

  <!-- Lightbox -->
  <div id="lightbox" class="lightbox">
    <span class="close-btn">&times;</span>
    <a class="prev-btn">&#10094;</a>
    <a class="next-btn">&#10095;</a>
    <div class="lightbox-content">
      <img src="" class="lightbox-img" alt="Lightbox Image">
      <div class="caption"></div>
    </div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const filterButtons = document.querySelectorAll(".filter-btn");
      const galleryItems = document.querySelectorAll(".image-item");
      const lightbox = document.getElementById("lightbox");
      const lightboxImg = document.querySelector(".lightbox-img");
      const captionText = document.querySelector(".caption");
      const closeBtn = document.querySelector(".close-btn");
      const prevBtn = document.querySelector(".prev-btn");
      const nextBtn = document.querySelector(".next-btn");

      let currentIndex = 0;
      let visibleImages = [];

      // Filter
      filterButtons.forEach((button) => {
        button.addEventListener("click", () => {
          document.querySelector(".filter-btn.active").classList.remove("active");
          button.classList.add("active");

          const filter = button.getAttribute("data-filter");

          galleryItems.forEach((item) => {
            if (filter === "all" || item.getAttribute("data-category") === filter) {
              item.classList.remove("hide");
            } else {
              item.classList.add("hide");
            }
          });
        });
      });

      // Lightbox
      function updateVisibleImages() {
        visibleImages = [];
        galleryItems.forEach((item) => {
          if (!item.classList.contains("hide")) {
            visibleImages.push(item);
          }
        });
      }

      function showLightbox(item) {
        updateVisibleImages();
        const index = visibleImages.indexOf(item);
        if (index === -1) return;

        currentIndex = index;
        const img = item.querySelector("img");
        lightbox.style.display = "flex";
        lightboxImg.src = img.src;
        captionText.textContent = img.alt;
      }

      function closeLightbox() {
        lightbox.style.display = "none";
      }

      function showNextImage() {
        currentIndex = (currentIndex + 1) % visibleImages.length;
        const img = visibleImages[currentIndex].querySelector("img");
        lightboxImg.src = img.src;
        captionText.textContent = img.alt;
      }

      function showPrevImage() {
        currentIndex = (currentIndex - 1 + visibleImages.length) % visibleImages.length;
        const img = visibleImages[currentIndex].querySelector("img");
        lightboxImg.src = img.src;
        captionText.textContent = img.alt;
      }

      galleryItems.forEach((item) => {
        item.addEventListener("click", () => showLightbox(item));
      });

      closeBtn.addEventListener("click", closeLightbox);
      prevBtn.addEventListener("click", showPrevImage);
      nextBtn.addEventListener("click", showNextImage);

      lightbox.addEventListener("click", (e) => {
        if (e.target === lightbox) {
          closeLightbox();
        }
      });

      document.addEventListener("keydown", (e) => {
        if (lightbox.style.display === "flex") {
          if (e.key === "ArrowRight") showNextImage();
          if (e.key === "ArrowLeft") showPrevImage();
          if (e.key === "Escape") closeLightbox();
        }
      });
    });
  </script>
</body>
</html>
